plugins {
	id 'java'
	id 'jacoco'
	id 'java-test-fixtures'
	id 'org.springframework.boot' version '3.2.7'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'io.freefair.lombok' version '8.4'
}

bootJar.enabled = false

repositories {
	mavenCentral()
}

subprojects {
	group 'com.musinsa'
	version '0.0.1-SNAPSHOT'

	apply plugin: 'java'
	apply plugin: 'java-library'
	apply plugin: 'jacoco'
	apply plugin: 'java-test-fixtures'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'io.freefair.lombok'

	java {
		sourceCompatibility = JavaVersion.VERSION_17
		targetCompatibility = JavaVersion.VERSION_17
	}

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	repositories {
		mavenCentral()
	}

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	}

	test {
		useJUnitPlatform()
	}

	jacocoTestReport {
		dependsOn(test)

		afterEvaluate {
			classDirectories.setFrom(files(classDirectories.files.collect {
				fileTree(dir: it, exclude: getExclusions(project.name))
			}))
		}
	}
}

ext {
	getExclusions = { moduleName ->
		switch (moduleName) {
			case 'shop-domain':
				return []
			case 'shop-dashboard':
				return ["**/ShopDashboardApplication.*"]
			case 'shop-style':
				return ["**/ShopStyleApplication.*"]
			default:
				return []
		}
	}
}